import java.util.ArrayList;
import java.util.LinkedList;
import java.util.List;

class MyHashMap<K, V> {
    private static final int DEFAULT_CAPACITY = 16;
    private List<LinkedList<Entry<K, V>>> buckets;
    private int capacity;

    private static class Entry<K, V> {
        K key;
        V value;

        Entry(K key, V value) {
            this.key = key;
            this.value = value;
        }
    }

    MyHashMap() {
        this(DEFAULT_CAPACITY);
    }

    MyHashMap(int capacity) {
        this.capacity = capacity;
        this.buckets = new ArrayList<>(capacity);

        for (int i = 0; i < capacity; i++) {
            buckets.add(new LinkedList<>());
        }
    }

    private int hash(K key) {
        return key.hashCode() % capacity;
    }

    public void put(K key, V value) {
        int bucketIndex = hash(key);
        LinkedList<Entry<K, V>> bucket = buckets.get(bucketIndex);

        for (Entry<K, V> entry : bucket) {
            if (entry.key.equals(key)) {
                entry.value = value;
                return;
            }
        }

        bucket.add(new Entry<>(key, value));
    }

    public V get(K key) {
        int bucketIndex = hash(key);
        LinkedList<Entry<K, V>> bucket = buckets.get(bucketIndex);

        for (Entry<K, V> entry : bucket) {
            if (entry.key.equals(key)) {
                return entry.value;
            }
        }

        return null; // Key not found
    }

    public boolean containsKey(K key) {
        int bucketIndex = hash(key);
        LinkedList<Entry<K, V>> bucket = buckets.get(bucketIndex);

        for (Entry<K, V> entry : bucket) {
            if (entry.key.equals(key)) {
                return true;
            }
        }

        return false;
    }

    public void remove(K key) {
        int bucketIndex = hash(key);
        LinkedList<Entry<K, V>> bucket = buckets.get(bucketIndex);

        for (Entry<K, V> entry : bucket) {
            if (entry.key.equals(key)) {
                bucket.remove(entry);
                return;
            }
        }
    }
}

public class HashMapExample {
    public static void main(String[] args) {
        MyHashMap<String, Integer> hashMap = new MyHashMap<>();

        hashMap.put("Alice", 25);
        hashMap.put("Bob", 30);
        hashMap.put("Charlie", 35);

        System.out.println("Bob's age: " + hashMap.get("Bob")); // Output: Bob's age: 30
        System.out.println("Does David exist? " + hashMap.containsKey("David")); // Output: Does David exist? false

        hashMap.remove("Alice");
        System.out.println("Alice's age after removal: " + hashMap.get("Alice")); // Output: Alice's age after removal: null
    }
}
